//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: LCameraBackToMyPlayer.proto
// Note: requires additional types generated from: LTimeEventProType.proto
namespace ActionData
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"LCameraBackToMyPlayer")]
  public partial class LCameraBackToMyPlayer : global::ProtoBuf.IExtensible
  {
    public LCameraBackToMyPlayer() {}
    
    private bool _isImm = default(bool);
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"isImm", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool isImm
    {
      get { return _isImm; }
      set { _isImm = value; }
    }
    private int _time = (int)120;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"time", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue((int)120)]
    public int time
    {
      get { return _time; }
      set { _time = value; }
    }
    private float _delay = (float)0;
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"delay", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    [global::System.ComponentModel.DefaultValue((float)0)]
    public float delay
    {
      get { return _delay; }
      set { _delay = value; }
    }
    private ActionData.LTimeEventProType _eventType;
    [global::ProtoBuf.ProtoMember(4, IsRequired = true, Name=@"eventType", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public ActionData.LTimeEventProType eventType
    {
      get { return _eventType; }
      set { _eventType = value; }
    }
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}