//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: LRemovePhantom.proto
// Note: requires additional types generated from: LTimeEventProType.proto
namespace ActionData
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"LRemovePhantom")]
  public partial class LRemovePhantom : global::ProtoBuf.IExtensible
  {
    public LRemovePhantom() {}
    
    private ActionData.LRemovePhantom.DisappearType _type = ActionData.LRemovePhantom.DisappearType.DISSOLVE;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"type", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(ActionData.LRemovePhantom.DisappearType.DISSOLVE)]
    public ActionData.LRemovePhantom.DisappearType type
    {
      get { return _type; }
      set { _type = value; }
    }
    private float _time = (float)-1;
    [global::ProtoBuf.ProtoMember(2, IsRequired = false, Name=@"time", DataFormat = global::ProtoBuf.DataFormat.FixedSize)]
    [global::System.ComponentModel.DefaultValue((float)-1)]
    public float time
    {
      get { return _time; }
      set { _time = value; }
    }
    private ActionData.LTimeEventProType _eventType;
    [global::ProtoBuf.ProtoMember(100, IsRequired = true, Name=@"eventType", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public ActionData.LTimeEventProType eventType
    {
      get { return _eventType; }
      set { _eventType = value; }
    }
    [global::ProtoBuf.ProtoContract(Name=@"DisappearType")]
    public enum DisappearType
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"DISSOLVE", Value=0)]
      DISSOLVE = 0
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}