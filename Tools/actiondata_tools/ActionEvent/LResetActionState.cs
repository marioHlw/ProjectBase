//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: LResetActionState.proto
// Note: requires additional types generated from: LTimeEventProType.proto
namespace ActionData
{
  [global::System.Serializable, global::ProtoBuf.ProtoContract(Name=@"LResetActionState")]
  public partial class LResetActionState : global::ProtoBuf.IExtensible
  {
    public LResetActionState() {}
    
    private ActionData.LResetActionState.State _state = ActionData.LResetActionState.State.STAND;
    [global::ProtoBuf.ProtoMember(1, IsRequired = false, Name=@"state", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
    [global::System.ComponentModel.DefaultValue(ActionData.LResetActionState.State.STAND)]
    public ActionData.LResetActionState.State state
    {
      get { return _state; }
      set { _state = value; }
    }
    private bool _resetAcceptProcess = default(bool);
    [global::ProtoBuf.ProtoMember(3, IsRequired = false, Name=@"resetAcceptProcess", DataFormat = global::ProtoBuf.DataFormat.Default)]
    [global::System.ComponentModel.DefaultValue(default(bool))]
    public bool resetAcceptProcess
    {
      get { return _resetAcceptProcess; }
      set { _resetAcceptProcess = value; }
    }
    private ActionData.LTimeEventProType _eventType;
    [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name=@"eventType", DataFormat = global::ProtoBuf.DataFormat.Default)]
    public ActionData.LTimeEventProType eventType
    {
      get { return _eventType; }
      set { _eventType = value; }
    }
    [global::ProtoBuf.ProtoContract(Name=@"State")]
    public enum State
    {
            
      [global::ProtoBuf.ProtoEnum(Name=@"STAND", Value=0)]
      STAND = 0
    }
  
    private global::ProtoBuf.IExtension extensionObject;
    global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
      { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
  }
  
}